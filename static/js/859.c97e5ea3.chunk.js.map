{"version":3,"file":"static/js/859.c97e5ea3.chunk.js","mappings":"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","sources":["components/TransactionsList/Shorter.js","webpack://ReactAvengers/./src/components/TransactionsList/TransactionsItem.module.css?6d6c","components/TransactionsList/TransactionsItem.jsx","webpack://ReactAvengers/./src/components/TransactionsMessage/TransactionsMessage.module.css?ee09","components/TransactionsMessage/TransactionsMessage.jsx","hooks/getTotalTransactionsSum.js","webpack://ReactAvengers/./src/components/TransactionsList/TransactionsList.module.css?185a","components/TransactionsList/TransactionsList.jsx","webpack://ReactAvengers/./src/components/TransactionsSearchTools/TransactionsSearchTools.module.css?415c","components/TransactionsSearchTools/TransactionsSearchTools.jsx","webpack://ReactAvengers/./src/pages/TransactionsHistoryPage/TransactionsHistoryPage.module.css?e4ac","pages/TransactionsHistoryPage/TransactionsHistoryPage.jsx"],"sourcesContent":["export const Shorter = (str, windowSize) => {\n  let word = 7;\n  if (windowSize < 1440) {\n    word = 6;\n  }\n\n  if (str.length > word) {\n    return `${str.slice(0, word)}...`;\n  }\n  return str;\n};\n\nexport const ShorterDate = (str, windowSize) => {\n  if (windowSize < 1440) {\n    return `${str.slice(0, 5)}...`;\n  }\n  if (windowSize >= 1440) {\n    return `${str.slice(0, 14)}`;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btnContainer\":\"TransactionsItem_btnContainer__UNfGl\",\"btnTable\":\"TransactionsItem_btnTable__XeQbC\",\"iconEdit\":\"TransactionsItem_iconEdit__P4oDQ\",\"btnTableDel\":\"TransactionsItem_btnTableDel__x6bB8\",\"iconDelete\":\"TransactionsItem_iconDelete__8JaCH\",\"textEdit\":\"TransactionsItem_textEdit__ksdtF\",\"textCont\":\"TransactionsItem_textCont__izU75\",\"tr\":\"TransactionsItem_tr__4IAGQ\",\"td\":\"TransactionsItem_td__d+av-\"};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { Shorter, ShorterDate } from './Shorter';\nimport { deleteTransaction } from 'my-redux/Transaction/operations';\nimport { Icon } from 'components';\nimport { fetchCurrentUser } from 'my-redux/User/operations';\nimport s from './TransactionsItem.module.css';\nimport { selectCurrency } from 'my-redux/User/userSlice';\n\nexport const TransactionsItem = ({ item, handleOpenModal }) => {\n  const [windowSize, setWindowSize] = useState(window.innerWidth);\n\n  useEffect(() => {\n    function handleWindowResize() {\n      setWindowSize(window.innerWidth);\n    }\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, []);\n\n  const dispatch = useDispatch();\n\n  const handleDeleteTransaction = id => {\n    dispatch(deleteTransaction(id))\n      .unwrap()\n      .then(() => {\n        dispatch(fetchCurrentUser());\n        toast.success('Transaction deleted successfully');\n      })\n      .catch(error => toast.error('Something wrong !'));\n  };\n\n  const convertDate = dateString => {\n    const dateObj = new Date(dateString);\n    const days = ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'];\n    const dayOfWeek = days[dateObj.getDay()];\n    const day = dateObj.getDate();\n    const month = dateObj.getMonth() + 1;\n    const year = dateObj.getFullYear();\n    const formattedDate = `${dayOfWeek}, ${\n      day[0] === '0' ? day.substring(1) : day\n    }.${month.toString().padStart(2, '0')}.${year}`;\n    return formattedDate;\n  };\n\n  const currency = useSelector(selectCurrency);\n\n  return (\n    <ul className={s.tr} key={item._id}>\n      <li className={s.td}>\n        {Shorter(item.category.categoryName, windowSize)}\n      </li>\n      <li className={s.td}>{Shorter(item.comment, windowSize)}</li>\n      <li className={s.td}>\n        {ShorterDate(convertDate(item.date), windowSize)}\n      </li>\n      <li className={s.td}>{item.time}</li>\n      <li className={s.td}>\n        {item.sum} / {currency.toUpperCase()}\n      </li>\n      <li className={s.td}>\n        <div className={s.btnContainer}>\n          <button className={s.btnTable} onClick={() => handleOpenModal(item)}>\n            <div className={s.textEdit}>Edit</div>\n            <Icon name=\"edit\" className={s.iconEdit} size=\"16\" />\n          </button>\n          <button\n            className={s.btnTableDel}\n            onClick={() => handleDeleteTransaction(item._id)}\n          >\n            <Icon name=\"trash-bin\" className={s.iconDelete} size=\"16\" />\n\n            <div className={s.textCont}>\n              <span>Delete</span>\n            </div>\n          </button>\n        </div>\n      </li>\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"TransactionsMessage_message__sY73g\"};","import s from './TransactionsMessage.module.css';\n\nexport const TransactionsMessage = ({ message }) => {\n  return <h2 className={s.message}>{message}</h2>;\n};\n","import { getTransactions } from 'my-redux/Transaction/operations';\nimport { useDispatch } from 'react-redux';\n\nexport const useGetTotalTransactionsSum = () => {\n  const dispatch = useDispatch();\n\n  const getTotalTransactionsSum = () => {\n    dispatch(getTransactions({ type: 'incomes' }));\n    dispatch(getTransactions({ type: 'expenses' }));\n  };\n\n  return getTotalTransactionsSum;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"containerTable\":\"TransactionsList_containerTable__rnVmV\",\"listTable\":\"TransactionsList_listTable__JzalU\",\"thead\":\"TransactionsList_thead__cvmoU\",\"th\":\"TransactionsList_th__pmFFm\",\"td\":\"TransactionsList_td__kiLvp\",\"tr\":\"TransactionsList_tr__8qRgO\",\"tbody\":\"TransactionsList_tbody__7w5DG\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { useParams } from 'react-router-dom';\n\nimport { TransactionsItem } from './TransactionsItem';\nimport { selectFilter } from 'my-redux/Filter/FilterSlice';\nimport { editTransaction } from 'my-redux/Transaction/operations';\nimport { selectTransactions } from 'my-redux/Transaction/transactionSlice';\nimport { useModal } from 'hooks';\nimport { Modal, TransactionForm } from 'components';\nimport { fetchCurrentUser } from 'my-redux/User/operations';\nimport { TransactionsMessage } from 'components/TransactionsMessage/TransactionsMessage';\nimport { useGetTotalTransactionsSum } from 'hooks/getTotalTransactionsSum';\nimport s from './TransactionsList.module.css';\n\nexport const TransactionsList = () => {\n  const { transactionsType } = useParams();\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectTransactions);\n\n  const getTotalSumTransaction = useGetTotalTransactionsSum();\n\n  const onSubmitForm = transaction => {\n    dispatch(editTransaction(transaction))\n      .unwrap()\n      .then(() => {\n        dispatch(fetchCurrentUser());\n        getTotalSumTransaction();\n        toast.success('Transaction edited successfully!');\n        toggleEditTransaction();\n      })\n      .catch(error => {\n        toast.error('Something went wrong!');\n      });\n  };\n\n  const [isOpenEditTransaction, toggleEditTransaction] = useModal();\n\n  const filter = useSelector(selectFilter);\n  const getFilterValue = () => {\n    return transactions.filter(\n      item =>\n        item.category.categoryName\n          .toLowerCase()\n          .includes(filter.toLowerCase()) ||\n        item.comment.toLowerCase().includes(filter.toLowerCase()) ||\n        item.date.includes(filter) ||\n        item.time.includes(filter) ||\n        item.sum.toString().includes(filter)\n    );\n  };\n  const filterItems = getFilterValue();\n\n  const [currentItem, setCurrentItem] = useState({});\n\n  const handleOpenModal = item => {\n    setCurrentItem(item);\n    toggleEditTransaction();\n  };\n\n  return (\n    <div className={`${s.containerTable} scroll scrollB `}>\n      <div className={s.listTable}>\n        <div className={s.thead}>\n          <ul className={s.tr} key=\"111111\">\n            <li className={s.th}>Category</li>\n            <li className={s.th}>Comment</li>\n            <li className={s.th}>Date</li>\n            <li className={s.th}>Time</li>\n            <li className={s.th}>Sum</li>\n            <li className={s.th}>Actions</li>\n          </ul>\n        </div>\n        <div className={`${s.tbody} scroll scrollB`}>\n          {transactions.length === 0 && (\n            <TransactionsMessage\n              message={`Transaction ${transactionsType} list is empty!`}\n            />\n          )}\n          {filterItems.length !== 0 &&\n            filterItems.map(item => (\n              <TransactionsItem\n                key={item._id}\n                item={item}\n                handleOpenModal={handleOpenModal}\n              />\n            ))}\n          {filter && filterItems.length === 0 && transactions.length !== 0 && (\n            <TransactionsMessage message=\"Nothing found by filter!\" />\n          )}\n        </div>\n      </div>\n      {isOpenEditTransaction && (\n        <Modal toggleModal={toggleEditTransaction}>\n          <TransactionForm\n            transaction={currentItem}\n            onSubmitForm={onSubmitForm}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"TransactionsSearchTools_formContainer__L1znS\",\"formBox\":\"TransactionsSearchTools_formBox__6AVYx\",\"formInput\":\"TransactionsSearchTools_formInput__Rh6eq\",\"formCalendar\":\"TransactionsSearchTools_formCalendar__TAbGt\",\"datePicker\":\"TransactionsSearchTools_datePicker__gFkLv\",\"datepickerContainer\":\"TransactionsSearchTools_datepickerContainer__FHBMB\",\"react-datepicker-wrapper\":\"TransactionsSearchTools_react-datepicker-wrapper__J50Bl\",\"filterContainer\":\"TransactionsSearchTools_filterContainer__oF5ZW\",\"iconSearch\":\"TransactionsSearchTools_iconSearch__RJ6M+\",\"iconDate\":\"TransactionsSearchTools_iconDate__NhUU6\"};","import { useDispatch, useSelector } from 'react-redux';\nimport DatePicker from 'react-datepicker';\nimport { format } from 'date-fns';\n\nimport {\n  changeDate,\n  changeFilter,\n  resetFilter,\n  selectDate,\n  selectFilter,\n} from 'my-redux/Filter/FilterSlice';\nimport { Icon, UniversalButton } from 'components';\nimport s from './TransactionsSearchTools.module.css';\n\nexport const TransactionsSearchTools = ({ handleOpenModal }) => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const changeFilterValue = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  const date = useSelector(selectDate);\n  const changeDateValue = e => {\n    if (!e) {\n      dispatch(changeDate(format(new Date(), 'yyyy-MM-dd')));\n      return;\n    }\n    dispatch(changeDate(format(e, 'yyyy-MM-dd')));\n  };\n\n  const handleResetFilter = () => {\n    dispatch(resetFilter());\n  };\n\n  return (\n    <div className={s.formContainer}>\n      <form action=\"\" className={s.formBox}>\n        <div className={s.filterContainer}>\n          <input\n            value={filter}\n            onChange={changeFilterValue}\n            type=\"text\"\n            className={s.formInput}\n            placeholder=\"Search for anything..\"\n          />\n          <Icon name=\"search\" className={s.iconSearch} size=\"20\" />\n        </div>\n\n        <div className={s.datepickerContainer}>\n          <DatePicker\n            className={s.formCalendar}\n            selected={date}\n            onChange={changeDateValue}\n            showPopperArrow={false}\n            maxDate={new Date()}\n            placeholderText=\"dd/mm/yyyy\"\n          />\n          <Icon name=\"calendar\" className={s.iconDate} size=\"20\" />\n        </div>\n        <UniversalButton action={handleResetFilter} type=\"reset\" />\n        <UniversalButton className={s.addBtn} action={handleOpenModal} />\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TransactionsHistoryPage_container__TdNmt\",\"historyTitle\":\"TransactionsHistoryPage_historyTitle__XNE7i\",\"historyText\":\"TransactionsHistoryPage_historyText__EnPaN\",\"textContainer\":\"TransactionsHistoryPage_textContainer__mYimV\",\"historyAmount\":\"TransactionsHistoryPage_historyAmount__aR6uD\"};","import { useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { TransactionsList } from 'components/TransactionsList/TransactionsList';\nimport { TransactionsSearchTools } from 'components/TransactionsSearchTools/TransactionsSearchTools';\nimport { Modal, TransactionForm, TransactionsTotalAmount } from 'components';\nimport {\n  selectTotalTransExpenses,\n  selectTotalTransIncomes,\n} from 'my-redux/Transaction/transactionSlice';\nimport {\n  addTransaction,\n  getTransactions,\n} from 'my-redux/Transaction/operations';\nimport { selectDate } from 'my-redux/Filter/FilterSlice';\nimport { useGetTotalTransactionsSum } from 'hooks/getTotalTransactionsSum';\nimport { useModal } from 'hooks';\nimport { fetchCurrentUser } from 'my-redux/User/operations';\nimport s from './TransactionsHistoryPage.module.css';\n\nconst TransactionsHistoryPage = () => {\n  const totalExpenses = useSelector(selectTotalTransExpenses);\n  const totalIncomes = useSelector(selectTotalTransIncomes);\n\n  const getTotalSumTransactionClick = useGetTotalTransactionsSum();\n\n  const onSubmitForm = transaction => {\n    dispatch(addTransaction(transaction))\n      .unwrap()\n      .then(() => {\n        dispatch(fetchCurrentUser());\n        getTotalSumTransactionClick();\n        toggleIsAddModal();\n        toast.success('Transaction added successfully!');\n      })\n      .catch(error => {\n        toast.error('Something went wrong!');\n      });\n  };\n\n  const dispatch = useDispatch();\n  const filterDate = useSelector(selectDate);\n\n  const { transactionsType } = useParams();\n  let text = 'All Expense';\n  let description =\n    'View and manage every transaction seamlessly! Your entire financial landscape, all in one place.';\n  if (transactionsType === 'incomes') {\n    text = 'All incomes';\n    description =\n      'Track and celebrate every bit of earnings effortlessly! Gain insights into your total revenue in a snap.';\n  }\n\n  const getTotalSumTransaction = useRef(useGetTotalTransactionsSum());\n\n  useEffect(() => {\n    getTotalSumTransaction.current();\n  }, []);\n\n  useEffect(() => {\n    if (filterDate) {\n      dispatch(getTransactions({ type: transactionsType, date: filterDate }));\n    } else {\n      dispatch(getTransactions({ type: transactionsType }));\n    }\n  }, [filterDate, dispatch, transactionsType]);\n\n  const [isAddModal, toggleIsAddModal] = useModal();\n\n  return (\n    <div className={s.container}>\n      <div className={s.textContainer}>\n        <h2 className={s.historyTitle}>{text}</h2>\n        <p className={s.historyText}>{description}</p>\n      </div>\n      <div className={s.historyAmount}>\n        <TransactionsTotalAmount\n          totalAllExpenses={totalExpenses}\n          totalAllIncomes={totalIncomes}\n        />\n      </div>\n      <TransactionsSearchTools handleOpenModal={toggleIsAddModal} />\n      <TransactionsList />\n      {isAddModal && (\n        <Modal toggleModal={toggleIsAddModal}>\n          <TransactionForm\n            onSubmitForm={onSubmitForm}\n            transactionsType={transactionsType}\n            history={transactionsType}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default TransactionsHistoryPage;\n"],"names":["Shorter","str","windowSize","word","length","concat","slice","ShorterDate","TransactionsItem","_ref","item","handleOpenModal","_useState","useState","window","innerWidth","_useState2","_slicedToArray","setWindowSize","useEffect","handleWindowResize","addEventListener","removeEventListener","dispatch","useDispatch","currency","useSelector","selectCurrency","_jsxs","className","s","children","_jsx","category","categoryName","comment","dateString","dateObj","Date","dayOfWeek","getDay","day","getDate","month","getMonth","year","getFullYear","substring","toString","padStart","convertDate","date","time","sum","toUpperCase","onClick","Icon","name","size","id","_id","deleteTransaction","unwrap","then","fetchCurrentUser","toast","catch","error","TransactionsMessage","message","useGetTotalTransactionsSum","getTransactions","type","TransactionsList","transactionsType","useParams","transactions","selectTransactions","getTotalSumTransaction","_useModal","useModal","_useModal2","isOpenEditTransaction","toggleEditTransaction","filter","selectFilter","filterItems","toLowerCase","includes","currentItem","setCurrentItem","map","Modal","toggleModal","TransactionForm","transaction","onSubmitForm","editTransaction","TransactionsSearchTools","selectDate","action","value","onChange","e","changeFilter","target","placeholder","DatePicker","selected","changeDate","format","showPopperArrow","maxDate","placeholderText","UniversalButton","resetFilter","totalExpenses","selectTotalTransExpenses","totalIncomes","selectTotalTransIncomes","getTotalSumTransactionClick","filterDate","text","description","useRef","current","isAddModal","toggleIsAddModal","TransactionsTotalAmount","totalAllExpenses","totalAllIncomes","addTransaction","history"],"sourceRoot":""}